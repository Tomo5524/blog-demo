[{"C:\\Users\\Tomoaki\\Desktop\\Odin\\blog-demo\\server\\client\\src\\index.js":"1","C:\\Users\\Tomoaki\\Desktop\\Odin\\blog-demo\\server\\client\\src\\App.js":"2","C:\\Users\\Tomoaki\\Desktop\\Odin\\blog-demo\\server\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Tomoaki\\Desktop\\Odin\\blog-demo\\server\\client\\src\\components\\nav.js":"4","C:\\Users\\Tomoaki\\Desktop\\Odin\\blog-demo\\server\\client\\src\\components\\home.js":"5","C:\\Users\\Tomoaki\\Desktop\\Odin\\blog-demo\\server\\client\\src\\components\\posts.js":"6","C:\\Users\\Tomoaki\\Desktop\\Odin\\blog-demo\\server\\client\\src\\components\\addPost.js":"7","C:\\Users\\Tomoaki\\Desktop\\Odin\\blog-demo\\server\\client\\src\\components\\content.js":"8","C:\\Users\\Tomoaki\\Desktop\\Odin\\blog-demo\\server\\client\\src\\components\\showPost.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":768,"mtime":1609944333405,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":900,"mtime":1607859523831,"results":"14","hashOfConfig":"11"},{"size":216,"mtime":1607858156992,"results":"15","hashOfConfig":"11"},{"size":1365,"mtime":1609944239039,"results":"16","hashOfConfig":"11"},{"size":8254,"mtime":1609925744873,"results":"17","hashOfConfig":"11"},{"size":221,"mtime":1608211152341,"results":"18","hashOfConfig":"11"},{"size":845,"mtime":1609944757989,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"n5g6v3",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Tomoaki\\Desktop\\Odin\\blog-demo\\server\\client\\src\\index.js",[],["43","44"],"C:\\Users\\Tomoaki\\Desktop\\Odin\\blog-demo\\server\\client\\src\\App.js",[],"C:\\Users\\Tomoaki\\Desktop\\Odin\\blog-demo\\server\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Tomoaki\\Desktop\\Odin\\blog-demo\\server\\client\\src\\components\\nav.js",["45","46","47","48","49","50","51"],"import React from \"react\";\r\n// import { Link, NavLink } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { NavLink } from \"react-router\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  NavItem,\r\n  NavDropdown,\r\n  MenuItem,\r\n  Form,\r\n  Button,\r\n  FormControl,\r\n} from \"react-bootstrap\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <Navbar className=\"navbar-dark py-3\" bg=\"dark\" expand=\"lg\">\r\n      <Navbar.Brand as={Link} to=\"/\">\r\n        Home\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse className=\"justify-content-end\" id=\"basic-navbar-nav\">\r\n        <Nav>\r\n          <Nav.Link as={Link} to=\"/posts\">\r\n            Posts\r\n          </Nav.Link>\r\n          <Nav.Link as={Link} to=\"/add-post\">\r\n            Add Post\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\Tomoaki\\Desktop\\Odin\\blog-demo\\server\\client\\src\\components\\home.js",["52","53"],"import React, { useState, useEffect } from \"react\";\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <h2>Welcome to SRST Fitness</h2>\r\n      <h4>Introduce your self</h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Tomoaki\\Desktop\\Odin\\blog-demo\\server\\client\\src\\components\\posts.js",["54","55"],"C:\\Users\\Tomoaki\\Desktop\\Odin\\blog-demo\\server\\client\\src\\components\\addPost.js",["56","57"],"import React, { useState, useEffect } from \"react\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction example_image_upload_handler(blobInfo, success, failure, progress) {\r\n  var xhr, formData;\r\n\r\n  xhr = new XMLHttpRequest();\r\n  xhr.withCredentials = false;\r\n  xhr.open(\"POST\", \"api/image-upload\"); // right\r\n  // xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n\r\n  // xhr.open(\"POST\", \"http://localhost:5000/api/posts\"); // wrong\r\n\r\n  xhr.upload.onprogress = function (e) {\r\n    progress((e.loaded / e.total) * 100);\r\n  };\r\n\r\n  xhr.onload = function () {\r\n    var json;\r\n\r\n    if (xhr.status === 403) {\r\n      failure(\"HTTP Error: \" + xhr.status, { remove: true });\r\n      return;\r\n    }\r\n\r\n    if (xhr.status < 200 || xhr.status >= 300) {\r\n      failure(\"HTTP Error: \" + xhr.status);\r\n      return;\r\n    }\r\n\r\n    json = JSON.parse(xhr.responseText);\r\n\r\n    if (!json || typeof json.location != \"string\") {\r\n      failure(\"Invalid JSON: \" + xhr.responseText);\r\n      return;\r\n    }\r\n\r\n    console.log(\"sucessfully updated\");\r\n    success(json.location);\r\n  };\r\n\r\n  xhr.onerror = function () {\r\n    failure(\r\n      \"Image upload failed due to a XHR Transport error. Code: \" + xhr.status\r\n    );\r\n  };\r\n\r\n  formData = new FormData();\r\n  formData.append(\"file\", blobInfo.blob(), blobInfo.filename());\r\n  console.log(\"hiya check at 51 in addPost///\");\r\n  xhr.send(formData);\r\n}\r\n\r\nfunction AddPost() {\r\n  const [title, settTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  let history = useHistory();\r\n  // useEffect(() => {\r\n  //   fetch(\"/api/posts\")\r\n  //     .then((res) => res.json())\r\n  //     .then((posts) => setCats(posts));\r\n  // }, []);\r\n  const titleChange = (e) => {\r\n    settTitle(e.target.value);\r\n  };\r\n  const descriptionChange = (e) => {\r\n    console.log(\"sucessfully descriptionChange called/////\");\r\n    // console.log(\r\n    //   e.target.getContent({ format: \"text\" }),\r\n    //   \"e.target.getContent()\"\r\n    // );\r\n    console.log(e.target.getContent(), \"e.target.getContent()\");\r\n    // console.log(\r\n    //   window.tinymce.activeEditor.getContent(),\r\n    //   \"window.tinymce.activeEditor.getContent()\"\r\n    // );\r\n    setDescription(window.tinymce.activeEditor.getContent());\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    console.log(description, \"description//////\");\r\n\r\n    fetch(\"http://localhost:5000/api/add-post\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      // We convert the React state to JSON and send it as the POST body\r\n      // body: JSON.stringify(title, description), does not work\r\n      body: JSON.stringify({ title, description }),\r\n      // returned in the following format\r\n      // {\r\n      //   \"title\": \"safdsadf\",\r\n      //   \"description\": \"sdafasdf\"\r\n      // }\r\n    }).then(function (response) {\r\n      // console.log(description, \"description//////\");\r\n      // console.log(response, \"response//////\");\r\n      return response.json();\r\n    });\r\n\r\n    e.preventDefault();\r\n    history.push(\"/posts\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group>\r\n          <Form.Label>Title</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter title\"\r\n            name=\"title\"\r\n            onChange={titleChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          {/* <Form.Label>Description</Form.Label> */}\r\n          <Editor\r\n            apiKey={process.env.tinyAPI}\r\n            name=\"description\"\r\n            onChange={descriptionChange}\r\n            init={{\r\n              plugins: [\r\n                \"advlist autolink lists link image charmap print preview anchor\",\r\n                \"searchreplace visualblocks code fullscreen\",\r\n                \"insertdatetime media table contextmenu paste imagetools wordcount help code\",\r\n              ],\r\n              toolbar:\r\n                \"undo redo | formatselect | styleselect | fontsizeselect | bold italic | \\\r\n                | link image | alignleft aligncenter alignright alignjustify  | \\\r\n                bullist numlist outdent indent | removeformat | help\",\r\n\r\n              /////\r\n              // file_browser_callback_types: \"image\",\r\n              // entity_encoding: \"raw\",\r\n              // encoding: \"xml\",\r\n              // selector: \"textarea#myTextArea\",\r\n              // cleanup: true,\r\n              // forced_root_block: false,\r\n              // a11y_advanced_options: true,\r\n              // // oninit: \"setPlainText\",\r\n              // //\r\n              // images_upload_url: \"postAcceptor.php\",\r\n\r\n              ///////\r\n              images_upload_url: \"api/image-upload\",\r\n              images_upload_handler: example_image_upload_handler,\r\n              // images_upload_handler: function (blobInfo, success, failure) {\r\n              //   setTimeout(function () {\r\n              //     /* no matter what you upload, we will turn it into TinyMCE logo :)*/\r\n              //     success('http://moxiecode.cachefly.net/tinymce/v9/images/logo.png');\r\n              //   }, 2000);\r\n              // },\r\n              ////////\r\n              // image_title: true,\r\n              // automatic_uploads: false,\r\n              ////\r\n              // images_upload_url: \"api/add-post\",\r\n              // images_upload_base_path: \"/some/basepath\",\r\n              // images_upload_credentials: true,\r\n\r\n              // image_class_list: [\r\n              //   { title: \"Responsive\", value: \"img-responsive\" },\r\n              // ],\r\n              //           file_picker_types: \"image\",\r\n              //           /* and here's our custom image picker*/\r\n              //           file_picker_callback: function (cb, value, meta) {\r\n              //             var input = document.createElement(\"input\");\r\n              //             input.setAttribute(\"type\", \"file\");\r\n              //             input.setAttribute(\"accept\", \"image/*\");\r\n\r\n              //             /*\r\n              //   Note: In modern browsers input[type=\"file\"] is functional without\r\n              //   even adding it to the DOM, but that might not be the case in some older\r\n              //   or quirky browsers like IE, so you might want to add it to the DOM\r\n              //   just in case, and visually hide it. And do not forget do remove it\r\n              //   once you do not need it anymore.\r\n              // */\r\n\r\n              //             input.onchange = function () {\r\n              //               var file = this.files[0];\r\n\r\n              //               var reader = new FileReader();\r\n              //               reader.onload = function () {\r\n              //                 /*\r\n              //       Note: Now we need to register the blob in TinyMCEs image blob\r\n              //       registry. In the next release this part hopefully won't be\r\n              //       necessary, as we are looking to handle it internally.\r\n              //     */\r\n              //                 var id = \"blobid\" + new Date().getTime();\r\n              //                 var blobCache =\r\n              //                   window.tinymce.activeEditor.editorUpload.blobCache;\r\n              //                 var base64 = reader.result.split(\",\")[1];\r\n              //                 var blobInfo = blobCache.create(id, file, base64);\r\n              //                 blobCache.add(blobInfo);\r\n\r\n              //                 /* call the callback and populate the Title field with the file name */\r\n              //                 cb(blobInfo.blobUri(), { title: file.name });\r\n              //               };\r\n              //               reader.readAsDataURL(file);\r\n              //             };\r\n\r\n              //             input.click();\r\n              //           },\r\n              content_style:\r\n                \"body { font-family:Helvetica,Arial,sans-serif; font-size:14px }\",\r\n            }}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddPost;\r\n","C:\\Users\\Tomoaki\\Desktop\\Odin\\blog-demo\\server\\client\\src\\components\\content.js",["58"],"import React from \"react\";\r\nimport renderHTML from \"react-render-html\";\r\n\r\nexport default function Content({ text }) {\r\n  return (\r\n    <div className=\"content\" dangerouslySetInnerHTML={{ __html: text }}></div>\r\n  );\r\n}\r\n","C:\\Users\\Tomoaki\\Desktop\\Odin\\blog-demo\\server\\client\\src\\components\\showPost.js",["59","60"],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":4,"column":10,"nodeType":"67","messageId":"68","endLine":4,"endColumn":17},{"ruleId":"65","severity":1,"message":"69","line":8,"column":3,"nodeType":"67","messageId":"68","endLine":8,"endColumn":10},{"ruleId":"65","severity":1,"message":"70","line":9,"column":3,"nodeType":"67","messageId":"68","endLine":9,"endColumn":14},{"ruleId":"65","severity":1,"message":"71","line":10,"column":3,"nodeType":"67","messageId":"68","endLine":10,"endColumn":11},{"ruleId":"65","severity":1,"message":"72","line":11,"column":3,"nodeType":"67","messageId":"68","endLine":11,"endColumn":7},{"ruleId":"65","severity":1,"message":"73","line":12,"column":3,"nodeType":"67","messageId":"68","endLine":12,"endColumn":9},{"ruleId":"65","severity":1,"message":"74","line":13,"column":3,"nodeType":"67","messageId":"68","endLine":13,"endColumn":14},{"ruleId":"65","severity":1,"message":"75","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"76","line":1,"column":27,"nodeType":"67","messageId":"68","endLine":1,"endColumn":36},{"ruleId":"65","severity":1,"message":"77","line":2,"column":8,"nodeType":"67","messageId":"68","endLine":2,"endColumn":15},{"ruleId":"65","severity":1,"message":"78","line":4,"column":8,"nodeType":"67","messageId":"68","endLine":4,"endColumn":16},{"ruleId":"65","severity":1,"message":"76","line":1,"column":27,"nodeType":"67","messageId":"68","endLine":1,"endColumn":36},{"ruleId":"79","severity":1,"message":"80","line":133,"column":17,"nodeType":"81","messageId":"82","endLine":135,"endColumn":70},{"ruleId":"65","severity":1,"message":"83","line":2,"column":8,"nodeType":"67","messageId":"68","endLine":2,"endColumn":18},{"ruleId":"65","severity":1,"message":"75","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"76","line":1,"column":27,"nodeType":"67","messageId":"68","endLine":1,"endColumn":36},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'NavItem' is defined but never used.","'NavDropdown' is defined but never used.","'MenuItem' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Content' is defined but never used.","'ShowPost' is defined but never used.","no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString","'renderHTML' is defined but never used.","no-global-assign","no-unsafe-negation"]